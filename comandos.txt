contenido obtenido de la pagina:
http://www.tutorialesprogramacionya.com/angularya/

//instalar angular
npm install -g @angular/cli

//version de angular
ng version
ng -v

//crear proyecto
ng new proyect_name

//crear proyecto con rutas
ng new pryect_name --routing

//ejecutar servidor
ng serve -o

//crear componente
ng generate component component_name
ng g c

//crear pipe
ng g p pipes/pipe_name

//ejecutar lint para verificar errores en el proyecto
ng lint

//crear directiva
ng g d directive/directive_name

//crear servicio
ng g s services/service_nameng lint

//crear un modulo (shared and core)
ng g m name_module

//crear un modulo con routing
ng g m name_module --routing

//crear guards
ng g g guard_name

//guardar libreria firebase en las referencias del package
npm i -s firebase angularfire2
ng add @angular/fire
npm install -g firebase-tools

//instalar angular material
ng add @angular/material

//instalar schematic
ng add @angular/cdk

//generar componente material address form
ng generate @angular/material:address-form name_form

//generar navegacion
ng generate @angular/material:nav name_nav
ng generate @angular/material:dashboard admin/components/dashboard
ng generate @angular/material:table admin/components/list-products

//compilar para produccion
ng build --prod

//compilar para otro ambiente creado con anterioridad (stag)
//correr
ng serve -c=stag
//compilar y hacer build al proyecto
ng build -c=stag

//crear clase
ng g class name_class

//realizar deploy en firebase hosting
firebase init
firebase deploy

//instalar librerias de css
npm install bootstrap --save-exact
npm install @fortawesome/fontawesome-free --save-exact

//referenciar estilos en angular.json
  ""styles"": [
    ""node_modules/bootstrap/dist/css/bootstrap.css"",
    ""node_modules/@fortawesome/fontawesome-free/css/all.css"",
    ""src/styles.css""
  ]

//actualizar ultima version del cli
npm i -g @angular/cli@latest

//actualizar las versiones del proyecto
ng update

//instalar sentry
npm i @sentry/browser --save

//file-saver archivos
npm install file-saver --save

//pruebas unitarias
ng test

//pruebas unitarias con reporte
ng test --watch=false --codeCoverage=true

//ejecutar el reporte generado coverage
http-server coverage/name_reporte

//descargar imagen de nginx en docker
docker pull nginx:alpine

//ejecutar nginx
docker run -d -p 8080:80 nginx:alpine

//ejecutar nginx con volumen
sudo docker run -d -p 8080:80 -v ruta_dist:/usr/share/nginx/html nginx:alpine

//crear nginx con dockerfile
docker build . -t name_proyecto:latest

//ejecutar el docker creado
docker run -d -p 8080:80 name_proyecto:latest

//instalar webpack
npm install webpack-bundle-analyzer --save-dev

//generar archivo de estadisticas
ng build --prod --stats-json

//generar analisis
npx webpack-bundle-analyzer dist/my-project/stats.json

//instalar ngx-quicklink
npm i ngx-quicklink --save

//instalar guessjs
npm un @angular-builders/custom-webpack guess-parser guess-webpack --save
npm install guess-webpack
npm install guess-parser

//convertir proyecto a pwa
ng add @angular/pwa --project *project-name*

//instalar http-server
npm install http-server -g

//ejecutar http-server
http-server dist/proyect_name

//server side rendering
ng add @nguniversal/express-engine

//generar el build y ejecutar servidor
npm run build:ssr && npm run serve:ssr


